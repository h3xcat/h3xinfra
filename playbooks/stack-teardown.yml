---
# Master playbook to orchestrate the complete K3s cluster teardown
# using the component-based directory structure

- name: Prepare for Kubernetes teardown
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Inform about teardown process
      ansible.builtin.debug:
        msg: "Starting K3s cluster teardown process..."

- name: Check if kubectl is accessible
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Test kubectl connection
      ansible.builtin.command: kubectl get nodes
      register: kubectl_result
      ignore_errors: true
      changed_when: false
      no_log: true

    - name: Set kubectl status fact
      ansible.builtin.set_fact:
        kubectl_accessible: "{{ kubectl_result.rc == 0 }}"
      
    - name: Show kubectl status
      ansible.builtin.debug:
        msg: "kubectl accessibility status: {{ kubectl_accessible }}"

# Single kubectl connection setup for components that need kubernetes
- import_playbook: 99-utils/kube-connect.yml
  when: hostvars['localhost']['kubectl_accessible'] | default(false) | bool

# - import_playbook: 10-keycloak/teardown.yml
#   when: hostvars['localhost']['kubectl_accessible'] | default(false) | bool

# - import_playbook: 09-mailu/teardown.yml
#   when: hostvars['localhost']['kubectl_accessible'] | default(false) | bool

- import_playbook: 08-longhorn/teardown.yml
  when: hostvars['localhost']['kubectl_accessible'] | default(false) | bool

- import_playbook: 02-cilium/teardown.yml
  when: hostvars['localhost']['kubectl_accessible'] | default(false) | bool

- import_playbook: 01-k3s/teardown.yml

# Step 6: Reboot nodes only if K3s was actually removed on that specific node
- name: Reboot nodes if K3s was uninstalled
  hosts: k3s_cluster
  become: true
  serial: 1  # Reboot one node at a time
  tasks:
    - name: Display reboot decision for this node
      ansible.builtin.debug:
        msg: "{{ 'Rebooting node as K3s was removed' if k3s_was_removed_on_node | default(false) else 'Skipping reboot - no changes were made on this node' }}"

    - name: Reboot the node
      ansible.builtin.reboot:
        msg: "Rebooting after K3s removal"
        reboot_timeout: 600
        test_command: uptime
      when: k3s_was_removed_on_node | default(false)
